{
  "openapi": "3.0.0",
  "info": {
    "title": "link-shrinking-app",
    "description": "An API for link grouping.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:2400/v1",
      "description": "v1"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Register a new user by providing email, first name, last name, password, and confirmPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login user",
        "description": "Login a user by providing email and password to receive a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "JWT token"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/link-providers": {
      "get": {
        "summary": "Get all available link providers (GitHub, LinkedIn, etc.)",
        "description": "Retrieve all link providers. Icons are available at '{{baseURL}}/static/icons/{{iconName}}.svg'",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinkProvider"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/{id}": {
      "get": {
        "summary": "Get user profile by ID",
        "description": "Retrieve public information for the user profile.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Get the authenticated user's profile",
        "description": "Retrieve the profile details of the authenticated user, including their profile picture, first name, last name, and email.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedUserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "consumes": ["multipart/form-data"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Profile updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/user-links": {
      "get": {
        "summary": "Get user links",
        "description": "Retrieve all user links for the authenticated user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user links retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserLink"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a user link",
        "description": "Create a new user link for the authenticated user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserLink"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User link created successfully"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update a user link",
        "description": "Update an existing user link for the authenticated user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserLink"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User link updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user-links/reorder": {
      "put": {
        "summary": "Reorder user links",
        "description": "Reorder the user's links by providing an array of link provider IDs.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User links reordered successfully"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user-links/{linkProviderId}": {
      "delete": {
        "summary": "Delete a user link",
        "description": "Delete a user link by its link provider ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "linkProviderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the link provider to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "User link deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["email", "firstName", "lastName", "password"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["email", "password"]
      },
      "LinkProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "iconName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "textColor": {
            "type": "string"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "profilePicturePath": {
            "type": "string",
            "example": "/static/profile-pictures/user1.webp"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "userLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "linkProviderId": {
                  "type": "integer",
                  "example": 1
                },
                "link": {
                  "type": "string",
                  "example": "https://linkedin.com/in/johndoe"
                },
                "order": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "ProfileUpdateRequest": {
        "type": "object",
        "properties": {
          "profilePicture": {
            "type": "string",
            "format": "binary"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": ["email", "firstName", "lastName"]
      },
      "AuthenticatedUserProfile": {
        "type": "object",
        "properties": {
          "profilePicturePath": {
            "type": "string",
            "nullable": true,
            "example": "/static/profile-pictures/user1.webp"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          }
        }
      },
      "UserLink": {
        "type": "object",
        "properties": {
          "linkProviderId": {
            "type": "integer",
            "example": 1
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "link": {
            "type": "string",
            "example": "https://linkedin.com/in/johndoe"
          }
        }
      },
      "CreateOrUpdateUserLink": {
        "type": "object",
        "properties": {
          "linkProviderId": {
            "type": "integer",
            "example": 1
          },
          "link": {
            "type": "string",
            "example": "https://linkedin.com/in/johndoe"
          }
        },
        "required": ["linkProviderId", "link"]
      }
    },
    "responses": {
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "One or more validation errors have occurred."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "profilePicture"
                          },
                          "issue": {
                            "type": "string",
                            "example": "Profile picture must be either in PNG or JPEG format."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
      }
    }
  }
}
